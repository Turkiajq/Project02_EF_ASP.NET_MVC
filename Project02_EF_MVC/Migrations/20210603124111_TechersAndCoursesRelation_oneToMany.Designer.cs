// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project02_EF_MVC.Data;

namespace Project02_EF_MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210603124111_TechersAndCoursesRelation_oneToMany")]
    partial class TechersAndCoursesRelation_oneToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Project02_EF_MVC.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1010,
                            Title = "ASP.NET"
                        },
                        new
                        {
                            Id = 1020,
                            Title = "React"
                        },
                        new
                        {
                            Id = 1030,
                            Title = "Unit Testing"
                        },
                        new
                        {
                            Id = 1040,
                            Title = "Design Pattern"
                        });
                });

            modelBuilder.Entity("Project02_EF_MVC.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Turki",
                            LastName = "Alqurashi"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ahmed",
                            LastName = "Alzubadi"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Adel",
                            LastName = "Kalu"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Abdullah",
                            LastName = "Al haif"
                        });
                });

            modelBuilder.Entity("Project02_EF_MVC.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sami",
                            LastName = "Aldahlawi"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ghada",
                            LastName = "Almutairi"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Hatem",
                            LastName = "Alsalman"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Abdullah",
                            LastName = "Altwaim"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Noora ",
                            LastName = "Abdullah"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Norah",
                            LastName = "Mohsen"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Sarah",
                            LastName = "Alqahtani"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Fai",
                            LastName = "Alotaibi"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Nouf",
                            LastName = "Alhassan"
                        });
                });

            modelBuilder.Entity("Project02_EF_MVC.Models.Teacher", b =>
                {
                    b.HasOne("Project02_EF_MVC.Models.Course", null)
                        .WithMany("Teachers")
                        .HasForeignKey("CourseId");
                });
#pragma warning restore 612, 618
        }
    }
}
